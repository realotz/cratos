// @ts-ignore
/* eslint-disable */
// Code generated by protoc-gen-ts-umi. DO NOT EDIT.

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.

declare namespace CratosApiV1 {
  /** Test2Entry */
  type Test2Entry = {
    key?:string
    value?:number
  }
  /** GatewayList */
  type GatewayList = {
    list?:Array<CratosApiV1.Gateway>
    test1?:Array<number>
    test2?:Map<string,number>
    test3?:Map<string,CratosApiV1.Gateway>
  }
  /** Gateway */
  type Gateway = {
    apiVersion?:string
    kind?:string
    spec?:IstioNetworkingV1beta1.Gateway
    metadata:K8sIoApimachineryPkgApisMetaV1.ObjectMeta
  }
  /** GetKind */
  type GetKind = {
    name?:string
    namespace?:string
    version?:string
  }
  /** DeleteKind */
  type DeleteKind = {
    name?:string
    namespace?:string
  }
  /** Response */
  type Response = {
  }
  /** ListOption */
  type ListOption = {
    limit?:number
    continue?:string
    labelSelector?:string
    fieldSelector?:string
    namespace?:string
  }
  /** Request */
  type Request = {
  }
  /** Test3Entry */
  type Test3Entry = {
    key?:string
    value?:CratosApiV1.Gateway
  }
}

declare namespace IstioNetworkingV1beta1 {
  /** Gateway */
  type Gateway = {
    servers?:Array<IstioNetworkingV1beta1.Server>
    selector?:Map<string,string>
  }
  /** Server */
  type Server = {
    port?:IstioNetworkingV1beta1.Port
    bind?:string
    hosts?:Array<string>
    tls?:IstioNetworkingV1beta1.ServerTLSSettings
    default_endpoint?:string
    name?:string
  }
  /** SelectorEntry */
  type SelectorEntry = {
    key?:string
    value?:string
  }
  /** Port */
  type Port = {
    number?:number
    protocol?:string
    name?:string
    target_port?:number
  }
  /** ServerTLSSettings */
  type ServerTLSSettings = {
    https_redirect?:boolean
    mode?:Array<any>
    server_certificate?:string
    private_key?:string
    ca_certificates?:string
    credential_name?:string
    subject_alt_names?:Array<string>
    verify_certificate_spki?:Array<string>
    verify_certificate_hash?:Array<string>
    min_protocol_version?:Array<any>
    max_protocol_version?:Array<any>
    cipher_suites?:Array<string>
  }
}

declare namespace K8sIoApimachineryPkgApisMetaV1 {
  /** OwnerReference */
  type OwnerReference = {
    apiVersion?:string
    kind?:string
    name?:string
    uid?:string
    controller?:boolean
    blockOwnerDeletion?:boolean
  }
  /** ManagedFieldsEntry */
  type ManagedFieldsEntry = {
    manager?:string
    operation?:string
    apiVersion?:string
    time?:K8sIoApimachineryPkgApisMetaV1.Time
    fieldsType?:string
    fieldsV1?:K8sIoApimachineryPkgApisMetaV1.FieldsV1
  }
  /** FieldsV1 */
  type FieldsV1 = {
    Raw?:string
  }
  /** ObjectMeta */
  type ObjectMeta = {
    name:string
    generateName?:string
    namespace:string
    selfLink?:string
    uid?:string
    resourceVersion?:string
    generation?:number
    creationTimestamp?:K8sIoApimachineryPkgApisMetaV1.Time
    deletionTimestamp?:K8sIoApimachineryPkgApisMetaV1.Time
    deletionGracePeriodSeconds?:number
    labels?:Map<string,string>
    annotations?:Map<string,string>
    ownerReferences?:Array<K8sIoApimachineryPkgApisMetaV1.OwnerReference>
    finalizers?:Array<string>
    clusterName?:string
    managedFields?:Array<K8sIoApimachineryPkgApisMetaV1.ManagedFieldsEntry>
  }
  /** Time */
  type Time = {
    seconds?:number
    nanos?:number
  }
  /** LabelsEntry */
  type LabelsEntry = {
    key?:string
    value?:string
  }
  /** AnnotationsEntry */
  type AnnotationsEntry = {
    key?:string
    value?:string
  }
}

